/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bazar;

import java.awt.GridLayout;
import java.awt.Label;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author Tomáš
 */
public class Pozadovane extends javax.swing.JFrame {
    private ArrayList<INaPredaj> pozadovane;
    private Inzerat inz;
    private JButton[] tlacitka;

    /**
     * Creates new form Pozadovane
     */
    /**
     * Konstruktor automaticky generuje buttony a priradzuje im listenery
     * Po stlacenie jednotlivych buttonov sa podhodi otazka k kúpe
     * Ak stlacime ano, inzerat sa odstrani z databazy a databaza sa nanovo nahra do suboru 
     * @param pozadovane
     * @param inz 
     */
    public Pozadovane(ArrayList<INaPredaj> pozadovane, Inzerat inz) {
        this.initComponents();
        this.inz = inz;
        this.pozadovane = new ArrayList<INaPredaj>();
        this.pozadovane = pozadovane;
        this.tlacitka = new JButton[this.pozadovane.size()];
        System.out.println(this.inz.toString());
        System.out.println(this.pozadovane);
        JFrame okno = new JFrame("Výber inzerátu");
        okno.setVisible(true);
        if (this.pozadovane.size() != 0) {
            for (int i = 0; i < this.tlacitka.length; i++) {
                JButton btn = (new JButton(this.pozadovane.get(i).toString()));
                okno.add(btn);
                btn.addActionListener(new java.awt.event.ActionListener() {
                    @Override
                    public void actionPerformed(java.awt.event.ActionEvent e) {
                        String inzerat = btn.getText();
                        for (int i = 0; i < inz.dajPocet(); i++) {
                            if (true) {
                                if (inz.poskytniInzerat(i).toString().equals(inzerat)) {
                                    int reply = JOptionPane.showConfirmDialog(null, inzerat + "\n" + "Naozaj chceš kúpiť tento inzerát?", "Záväzná kúpa", JOptionPane.YES_NO_OPTION);
                                    if (reply == JOptionPane.YES_OPTION) {
                                        inz.odoberInzerat(i);
                                        JOptionPane.showMessageDialog(null, "Predané, ďakujeme za transakciu!");
                                        try {
                                            inz.zapisDatabazu();
                                            okno.dispose();
                                        } catch (IOException ex) {
                                            JOptionPane.showMessageDialog(null, "Nastala chyba, je nám ľúto");
                                            okno.dispose();
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                );
                this.tlacitka[i] = btn;   
            }
            okno.setLayout(new GridLayout(this.pozadovane.size(), 0));
            okno.pack();
        } else {
            okno.add(new Label("Žiadne inzeráty nevyhovujú Vaším podmienkam."));
            okno.pack();
        }
        okno.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        okno.addWindowListener (new WindowAdapter() { 
            @Override 
            public void windowClosing(WindowEvent e) {
                int reply = JOptionPane.showConfirmDialog(null, "Naozaj chceš skončiť, tvoje dáta sa stratia", "Koniec", JOptionPane.YES_NO_OPTION);
                if (reply == JOptionPane.YES_OPTION) {
                    okno.dispose();
                }
            }
        }
        );
    }
    
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pozadovane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pozadovane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pozadovane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pozadovane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pozadovane(new ArrayList<INaPredaj>(), new Inzerat()).setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
