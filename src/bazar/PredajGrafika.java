/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bazar;

import elektronika.Elektronika;
import elektronika.Mobil;
import elektronika.Pocitac;
import java.awt.event.WindowEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import majitel.Osoba;
import naKolesach.Auto;
import naKolesach.Autobus;
import naKolesach.Kamion;
import naKolesach.Motorka;
import zahradneMasiny.Kosacka;
import zahradneMasiny.Krovinorez;
import zahradneMasiny.MotorovaPila;

/**
 *
 * @author Tomáš
 */
public class PredajGrafika extends javax.swing.JFrame {
    private Inzerat inz;
    private static PredajGrafika instancia = null;
    /**
     * Creates new form PredajGrafika
     */
    
    public static PredajGrafika getInstancePredajGrafika (Inzerat inz) {
        if (instancia == null) {
            instancia = new PredajGrafika(inz);
        } 
        return instancia;
    }  
    
    private PredajGrafika(Inzerat inz) {
        initComponents();
        this.inz = inz;
        this.volbaL.setVisible(false);;
        this.volbaCB.setVisible(false);
        this.L70.setVisible(false);
        this.T70.setVisible(false);
        this.L60.setVisible(false);
        this.T60.setVisible(false);
        this.L10.setVisible(false);
        this.T10.setVisible(false);
        this.L50.setVisible(false);
        this.T50.setVisible(false);
        this.L40.setVisible(false);
        this.T40.setVisible(false);
        this.L80.setVisible(false);
        this.T80.setVisible(false);
        this.L30.setVisible(false);
        this.T30.setVisible(false);
        this.volbaL.setVisible(false);
        this.L20.setVisible(false);
        this.T20.setVisible(false);
        this.L00.setVisible(false);
        this.T00.setVisible(false);
        this.L01.setVisible(false);
        this.L11.setVisible(false);
        this:T01.setVisible(false);
        this.T11.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        druhL = new javax.swing.JLabel();
        druhCB = new javax.swing.JComboBox<>();
        volbaL = new javax.swing.JLabel();
        volbaCB = new javax.swing.JComboBox<>();
        L00 = new javax.swing.JLabel();
        L10 = new javax.swing.JLabel();
        L20 = new javax.swing.JLabel();
        L30 = new javax.swing.JLabel();
        L40 = new javax.swing.JLabel();
        L50 = new javax.swing.JLabel();
        L60 = new javax.swing.JLabel();
        L70 = new javax.swing.JLabel();
        L80 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        T00 = new javax.swing.JTextField();
        T10 = new javax.swing.JTextField();
        T20 = new javax.swing.JTextField();
        T30 = new javax.swing.JTextField();
        T40 = new javax.swing.JTextField();
        T50 = new javax.swing.JTextField();
        T60 = new javax.swing.JTextField();
        T70 = new javax.swing.JTextField();
        T80 = new javax.swing.JTextField();
        cenaT = new javax.swing.JTextField();
        komentarT = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        menoT = new javax.swing.JTextField();
        priezviskoT = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        denT = new javax.swing.JTextField();
        mesiacT = new javax.swing.JTextField();
        rokT = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        mestoT = new javax.swing.JTextField();
        cisloT = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        pridajB = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        L01 = new javax.swing.JLabel();
        L11 = new javax.swing.JLabel();
        T01 = new javax.swing.JTextField();
        T11 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Vitajte v sekcií pridávania inzerátu. Pokračujte výberom možností.");

        druhL.setText("Zvoľte druh inzerátu");

        druhCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vozidlo", "Mašina do záhrady", "Elektronika" }));
        druhCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                druhCBActionPerformed(evt);
            }
        });

        volbaL.setText("Zvoľte typ vozidla");

        volbaCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Zvoľte...", "Auto", "Motorka", "Kamión", "Autobus" }));
        volbaCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volbaCBActionPerformed(evt);
            }
        });

        L00.setText("Značka");

        L10.setText("Model");

        L20.setText("Výkon");

        L30.setText("Rok výroby");

        L40.setText("Obsah motora");

        L50.setText("Najazdené km");

        L60.setText("Karoséria");

        L70.setText("Farba");

        L80.setText("Palivo");

        jLabel11.setText("Cena");

        jLabel12.setText("Váš komentár");

        T00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                T00ActionPerformed(evt);
            }
        });

        T10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                T10ActionPerformed(evt);
            }
        });

        T20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                T20ActionPerformed(evt);
            }
        });

        T40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                T40ActionPerformed(evt);
            }
        });

        T70.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                T70ActionPerformed(evt);
            }
        });

        cenaT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cenaTActionPerformed(evt);
            }
        });

        komentarT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                komentarTActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Vaše osobné údaje");

        jLabel14.setText("Meno");

        jLabel15.setText("Priezvisko");

        jLabel16.setText("Deň");

        jLabel17.setText("Mesiac");

        jLabel18.setText("Rok");

        mesiacT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mesiacTActionPerformed(evt);
            }
        });

        jLabel19.setText("Mesto");

        jLabel20.setText("Tel. číslo");

        mestoT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mestoTActionPerformed(evt);
            }
        });

        cisloT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cisloTActionPerformed(evt);
            }
        });

        jLabel21.setText("Dátum narodenia");

        pridajB.setText("Pridaj inzerát");
        pridajB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pridajBActionPerformed(evt);
            }
        });

        jLabel2.setText("€");

        L01.setText("jLabel3");

        L11.setText("jLabel4");

        T01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                T01ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(37, 37, 37)
                                    .addComponent(menoT, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(priezviskoT, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel19)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(mestoT, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel13)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(L00)
                                .addComponent(volbaL)
                                .addComponent(L10)
                                .addComponent(L30)
                                .addComponent(L40)
                                .addComponent(L50)
                                .addComponent(L60)
                                .addComponent(L70)
                                .addComponent(L80)
                                .addComponent(L20)))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel18)
                                            .addComponent(jLabel16))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(denT, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(mesiacT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(rokT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(111, 111, 111)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel20)
                                                .addGap(18, 18, 18))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addGap(18, 18, 18)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(T01, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(T11, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(cenaT, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(cisloT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel2))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(T00, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(volbaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(T10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(T20, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(T30, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(T40, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(T50, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(T60, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(T70, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(T80, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(124, 124, 124)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(L01)
                                    .addComponent(L11)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(druhL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(druhCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(268, 268, 268)))
                .addGap(18, 111, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(komentarT, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12))
                    .addComponent(pridajB))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(druhL)
                    .addComponent(druhCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volbaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(volbaL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L00)
                    .addComponent(T00, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(L01)
                    .addComponent(T01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L10)
                    .addComponent(T10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(L11)
                    .addComponent(T11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(T20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(L20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L30)
                    .addComponent(T30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L40)
                    .addComponent(T40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L50, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(T50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L60)
                    .addComponent(T60, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L70)
                    .addComponent(T70, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L80)
                    .addComponent(T80, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(menoT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(priezviskoT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mestoT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(denT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(mesiacT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel20)
                                    .addComponent(cisloT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(cenaT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(rokT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(12, 12, 12)
                        .addComponent(komentarT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(pridajB)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Nastavi komponenty neviditelne
     */
    private void setInvisibleComponents() {
        this.L70.setVisible(false);
        this.T70.setVisible(false);
        this.L60.setVisible(false);
        this.T60.setVisible(false);
        this.L10.setVisible(false);
        this.T10.setVisible(false);
        this.L50.setVisible(false);
        this.T50.setVisible(false);
        this.L40.setVisible(false);
        this.T40.setVisible(false);
        this.L80.setVisible(false);
        this.T80.setVisible(false);
        this.L30.setVisible(false);
        this.T30.setVisible(false);
        this.L20.setVisible(false);
        this.T20.setVisible(false);
        this.L00.setVisible(false);
        this.T00.setVisible(false);
        this.L01.setVisible(false);
        this.L11.setVisible(false);
        this:T01.setVisible(false);
        this.T11.setVisible(false);
        
    }
    
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        int reply = JOptionPane.showConfirmDialog(null, "Naozaj chceš skončiť, tvoje dáta sa stratia", "Koniec", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            dispose();
        }
        
    }//GEN-LAST:event_formWindowClosing
    /**
     * Na zaklade combo boxu zviditelnuje jednotlive labely a text fieldy podla podmienky
     * @param evt 
     */
    private void volbaCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volbaCBActionPerformed
        // TODO add your handling code here:
       if(druhCB.getSelectedIndex() == 0) {
           if (volbaCB.getSelectedIndex() == 0) {
               this.setInvisibleComponents();
               this.L00.setVisible(true);
               this.L00.setText("Značka");
               this.T00.setVisible(true);
               this.L10.setVisible(true);
               this.L10.setText("Model");
               this.T10.setVisible(true);
               this.L20.setVisible(true);
               this.L20.setText("Vykon");
               this.T20.setVisible(true);
               this.L30.setVisible(true);
               this.L30.setText("RokVyroby");
               this.T30.setVisible(true);
               this.L40.setVisible(true);
               this.L40.setText("Obsah motora");
               this.T40.setVisible(true);
               this.L50.setVisible(true);
               this.L50.setText("Najazdené km");
               this.T50.setVisible(true);
               this.L60.setVisible(true);
               this.L60.setText("Karoséria");
               this.T60.setVisible(true);
               this.L70.setVisible(true);
               this.L70.setText("Farba");
               this.T70.setVisible(true);
               this.L80.setVisible(true);
               this.L80.setText("Palivo");
               this.T80.setVisible(true);
           } else if (volbaCB.getSelectedIndex() == 1) {
               this.setInvisibleComponents();
               this.L00.setVisible(true);
               this.L00.setText("Značka");
               this.T00.setVisible(true);
               this.L10.setVisible(true);
               this.L10.setText("Model");
               this.T10.setVisible(true);
               this.L20.setVisible(true);
               this.L20.setText("Vykon");
               this.T20.setVisible(true);
               this.L30.setVisible(true);
               this.L30.setText("RokVyroby");
               this.T30.setVisible(true);
               this.L40.setVisible(true);
               this.L40.setText("Obsah motora");
               this.T40.setVisible(true);
               this.L50.setVisible(true);
               this.L50.setText("Najazdené km");
               this.T50.setVisible(true);
               this.L60.setVisible(true);
               this.L60.setText("Karoséria");
               this.T60.setVisible(true);
               this.L70.setVisible(true);
               this.L70.setText("Farba");
               this.T70.setVisible(true);
               this.L80.setVisible(true);
               this.L80.setText("Palivo");
               this.T80.setVisible(true);
           } else if (volbaCB.getSelectedIndex() == 2) {
               this.setInvisibleComponents();
               this.L00.setVisible(true);
               this.L00.setText("Značka");
               this.T00.setVisible(true);
               this.L10.setVisible(true);
               this.L10.setText("Model");
               this.T10.setVisible(true);
               this.L20.setVisible(true);
               this.L20.setText("Vykon");
               this.T20.setVisible(true);
               this.L30.setVisible(true);
               this.L30.setText("RokVyroby");
               this.T30.setVisible(true);
               this.L40.setVisible(true);
               this.L40.setText("Obsah motora");
               this.T40.setVisible(true);
               this.L50.setVisible(true);
               this.L50.setText("Najazdené km");
               this.T50.setVisible(true);
               this.L60.setVisible(true);
               this.L60.setText("Karoséria");
               this.T60.setVisible(true);
               this.L70.setVisible(true);
               this.L70.setText("Farba");
               this.T70.setVisible(true);
               this.L80.setVisible(true);
               this.L80.setText("Palivo");
               this.T80.setVisible(true);
               this.L01.setVisible(true);
               this.L01.setText("Emisná t.");
               this.L11.setVisible(true);
               this.L11.setText("Poč. miest");
               this:T01.setVisible(true);
               this.T11.setVisible(true);
           } else if (volbaCB.getSelectedIndex() == 3) {
               this.setInvisibleComponents();
               this.L00.setVisible(true);
               this.L00.setText("Značka");
               this.T00.setVisible(true);
               this.L10.setVisible(true);
               this.L10.setText("Model");
               this.T10.setVisible(true);
               this.L20.setVisible(true);
               this.L20.setText("Vykon");
               this.T20.setVisible(true);
               this.L30.setVisible(true);
               this.L30.setText("RokVyroby");
               this.T30.setVisible(true);
               this.L40.setVisible(true);
               this.L40.setText("Obsah motora");
               this.T40.setVisible(true);
               this.L50.setVisible(true);
               this.L50.setText("Najazdené km");
               this.T50.setVisible(true);
               this.L60.setVisible(true);
               this.L60.setText("Karoséria");
               this.T60.setVisible(true);
               this.L70.setVisible(true);
               this.L70.setText("Farba");
               this.T70.setVisible(true);
               this.L80.setVisible(true);
               this.L80.setText("Palivo");
               this.T80.setVisible(true);
               this.L01.setVisible(true);
               this.L01.setText("Emisná t.");
               this.L11.setVisible(true);
               this.L11.setText("Nosnosť");
               this:T01.setVisible(true);
               this.T11.setVisible(true);
           }
       } else if (druhCB.getSelectedIndex() == 1) {
           this.setInvisibleComponents();
            this.L00.setVisible(true);
            this.L00.setText("Značka");
            this.T00.setVisible(true);
            this.L10.setVisible(true);
            this.L10.setText("Doba použ. v mes.");
            this.T10.setVisible(true);
            this.L20.setVisible(true);
            this.L20.setText("Prikon");
            this.T20.setVisible(true);
            this.L30.setVisible(true);
            this.L30.setText("RokVyroby");
            this.T30.setVisible(true);
            this.L40.setVisible(true);
            this.L40.setText("Objem motora");
            this.T40.setVisible(true);
       } else if (druhCB.getSelectedIndex() == 2) {
            if (volbaCB.getSelectedIndex() == 0) {
               this.setInvisibleComponents();
               this.L00.setVisible(true);
               this.L00.setText("Značka");
               this.T00.setVisible(true);
               this.L10.setVisible(true);
               this.L10.setText("RokVyroby");
               this.T10.setVisible(true);
               this.L20.setVisible(true);
               this.L20.setText("Doba použ. v mes.");
               this.T20.setVisible(true);
               this.L30.setVisible(true);
               this.L30.setText("Frekven. procesora");
               this.T30.setVisible(true);
               this.L40.setVisible(true);
               this.L40.setText("RAM");
               this.T40.setVisible(true);
               this.L50.setVisible(true);
               this.L50.setText("Interná pamäť");
               this.T50.setVisible(true);
               this.L60.setVisible(true);
               this.L60.setText("Uhlopriečka displeja");
               this.T60.setVisible(true);
           } else if (volbaCB.getSelectedIndex() == 1) {
               this.setInvisibleComponents();
               this.L00.setVisible(true);
               this.L00.setText("Značka");
               this.T00.setVisible(true);
               this.L10.setVisible(true);
               this.L10.setText("RokVyroby");
               this.T10.setVisible(true);
               this.L20.setVisible(true);
               this.L20.setText("Doba použ. v mes.");
               this.T20.setVisible(true);
               this.L30.setVisible(true);
               this.L30.setText("Frekven. procesora");
               this.T30.setVisible(true);
               this.L40.setVisible(true);
               this.L40.setText("RAM");
               this.T40.setVisible(true);
               this.L50.setVisible(true);
               this.L50.setText("Interná pamäť");
               this.T50.setVisible(true);
               this.L60.setVisible(true);
               this.L60.setText("Výdrž batérie");
               this.T60.setVisible(true);
               this.L70.setVisible(true);
               this.L70.setText("Rozlíšenie fotoap.");
               this.T70.setVisible(true);
           } else if (volbaCB.getSelectedIndex() == 2) {
               this.setInvisibleComponents();
               this.L00.setVisible(true);
               this.L00.setText("Značka");
               this.T00.setVisible(true);
               this.L10.setVisible(true);
               this.L10.setText("RokVyroby");
               this.T10.setVisible(true);
               this.L20.setVisible(true);
               this.L20.setText("Doba použ. v mes.");
               this.T20.setVisible(true);
           }
       }
    }//GEN-LAST:event_volbaCBActionPerformed
    /**
     * Nastavu podradeny combo box na zaklade nadradeneho
     * @param evt 
     */
    
    private void druhCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_druhCBActionPerformed
        // TODO add your handling code here:
        if (druhCB.getSelectedIndex() == 0) {
            this.setInvisibleComponents();
            this.volbaL.setVisible(true);
            this.volbaL.setText("Vyberte druh vozidla");
            this.volbaCB.setVisible(true);
            this.volbaCB.removeAllItems();
            this.volbaCB.insertItemAt("Auto",0);
            this.volbaCB.insertItemAt("Motorka",1);
            this.volbaCB.insertItemAt("Autobus",2);
            this.volbaCB.insertItemAt("Kamion",3);
        } else if (druhCB.getSelectedIndex() == 1) {
            this.setInvisibleComponents();
            this.volbaL.setVisible(true);
            this.volbaL.setText("Vyberte typ stroja");
            this.volbaCB.setVisible(true);
            this.volbaCB.removeAllItems();
            this.volbaCB.insertItemAt("Kosačka",0);
            this.volbaCB.insertItemAt("Krovinorez",1);
            this.volbaCB.insertItemAt("Motorová píla",2);
        } else if (druhCB.getSelectedIndex() == 2) {
            this.setInvisibleComponents();
            this.volbaL.setVisible(true);
            this.volbaL.setText("Vyberte typ elektra");
            this.volbaCB.setVisible(true);
            this.volbaCB.removeAllItems();
            this.volbaCB.insertItemAt("Počítač",0);
            this.volbaCB.insertItemAt("Mobil",1);
            this.volbaCB.insertItemAt("Iné",2);
        }
    }//GEN-LAST:event_druhCBActionPerformed

    private void T10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_T10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_T10ActionPerformed

    private void T20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_T20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_T20ActionPerformed

    private void T40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_T40ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_T40ActionPerformed

    private void cenaTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cenaTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cenaTActionPerformed

    private void T70ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_T70ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_T70ActionPerformed

    private void mesiacTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mesiacTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mesiacTActionPerformed

    private void komentarTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_komentarTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_komentarTActionPerformed

    private void mestoTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mestoTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mestoTActionPerformed

    private void cisloTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cisloTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cisloTActionPerformed
    /**
     * Stalcenim tlacidla pridaj sa prejde vsetkymi textfieldami a pozbieraju sa data pre inzerat
     * V prípade chyby, vyhodi vynimky roznych typov
     * Po pridani okamzite databazu nanovo nahrava do suboru 
     * @param evt 
     */
    private void pridajBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pridajBActionPerformed
        // TODO add your handling code here:
        int vytvor = 0;
        String znacka = "";
        String model = "";
        String karoseria = "";
        String farba = "";
        String palivo = "";
        int vykon = 0;
        int najazdeneKm = 0;
        int rokVyroby = 0;
        double obsahMotora = 0;
        String emisnaTrieda = "";
        int nosnost = 0;
        int pocetMiest = 0;
        int dobaPouzivania = 0;
        int frekvencia = 0;
        double ram = 0;
        double internaPamat = 0;
        int vydrzBateria = 0;
        int uhlopriecka = 0;  
        int rozlisenieFotaku = 0;
        String meno = "";
        String priezvisko = "";
        String mesto = "";
        int den = 0;
        int mesiac = 0;
        int rok = 0;
        int cena = 0;
        long cislo = 0;
        String komentar = "";
        if (this.druhCB.getSelectedIndex() == 0) {
            znacka = "";
            model = "";
            karoseria = "";
            farba = "";
            palivo = "";
            vykon = 0;
            najazdeneKm = 0;
            rokVyroby = 0;
            obsahMotora = 0;
            emisnaTrieda = "";
            nosnost = 0;
            pocetMiest = 0;
            dobaPouzivania = 0;
            frekvencia = 0;
            ram = 0;
            internaPamat = 0;
            vydrzBateria = 0;
            uhlopriecka = 0;  
            rozlisenieFotaku = 0;
            if (true) {
                znacka = "";
                model = "";
                karoseria = "";
                farba = "";
                palivo = "";
                vykon = 0;
                najazdeneKm = 0;
                rokVyroby = 0;
                obsahMotora = 0;
                emisnaTrieda = "";
                nosnost = 0;
                pocetMiest = 0;
                dobaPouzivania = 0;
                frekvencia = 0;
                ram = 0;
                internaPamat = 0;
                vydrzBateria = 0;
                uhlopriecka = 0;  
                rozlisenieFotaku = 0;
                if (!this.T00.getText().isEmpty()) {
                    znacka = this.T00.getText();
                } else {
                    JOptionPane.showMessageDialog(null, "Nevyhovujúca značka");
                    vytvor++;       
                }
                if (!this.T10.getText().isEmpty()){
                    model = this.T10.getText();
                } else {
                    JOptionPane.showMessageDialog(null, "Nevyhovujúci model");
                    vytvor++;
                } 
                try {
                    vykon = Integer.parseInt(this.T20.getText());
                    if(vykon < 0) {
                        vykon = Integer.parseInt("zle");
                    }
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Zle zadaný výkon");
                    vytvor++;    
                }
                try {
                    rokVyroby = Integer.parseInt(this.T30.getText());
                    if(rokVyroby < 0) {
                        rokVyroby = Integer.parseInt("zle");
                    }
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Zle zadaný rok výroby");
                    vytvor++;    
                }
                try {
                    obsahMotora = Double.parseDouble(this.T40.getText());
                    if(obsahMotora < 0) {
                        obsahMotora = Double.parseDouble("zle");
                    }
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Zle zadaný obsah motora");
                    vytvor++;    
                }
                try {
                    najazdeneKm = Integer.parseInt(this.T50.getText());
                    if(najazdeneKm < 0) {
                        najazdeneKm = Integer.parseInt("zle");
                    }
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Zle zadané najazdené kilometre");
                    vytvor++;    
                }
                if (!this.T60.getText().isEmpty()){
                    karoseria = this.T60.getText();
                } else {
                    JOptionPane.showMessageDialog(null, "Nevyhovujúca karoséria");
                    vytvor++;
                }
                if (!this.T70.getText().isEmpty()){
                    farba = this.T70.getText();
                } else {
                    JOptionPane.showMessageDialog(null, "Nevyhovujúca farba");
                    vytvor++;
                }
                if (!this.T80.getText().isEmpty()){
                    palivo = this.T80.getText();
                } else {
                    JOptionPane.showMessageDialog(null, "Nevyhovujúce palivo");
                    vytvor++;
                }  
                if (this.volbaCB.getSelectedIndex() == 2) {
                    if (!this.T01.getText().isEmpty()){
                        emisnaTrieda = this.T01.getText();
                    } else {
                        JOptionPane.showMessageDialog(null, "Nevyhovujúca emisná trieda");
                        vytvor++;
                    }
                    try {
                        pocetMiest = Integer.parseInt(this.T11.getText());
                        if(pocetMiest < 0) {
                            pocetMiest = Integer.parseInt("zle");
                        }
                    } catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(null, "Zle zadaný počet miest");
                        vytvor++;    
                    }
                } else if (this.volbaCB.getSelectedIndex() == 3) {
                    if (!this.T01.getText().isEmpty()){
                        emisnaTrieda = this.T01.getText();
                    } else {
                        JOptionPane.showMessageDialog(null, "Nevyhovujúca emisná trieda");
                        vytvor++;
                    }
                    try {
                        nosnost = Integer.parseInt(this.T11.getText());
                        if(nosnost < 0) {
                            nosnost = Integer.parseInt("zle");
                        }
                    } catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(null, "Zle zadaná nosnosť");
                        vytvor++;    
                    } 
                }
            }
        } else if (this.druhCB.getSelectedIndex() == 1) {
            znacka = "";
            model = "";
            karoseria = "";
            farba = "";
            palivo = "";
            vykon = 0;
            najazdeneKm = 0;
            rokVyroby = 0;
            obsahMotora = 0;
            emisnaTrieda = "";
            nosnost = 0;
            pocetMiest = 0;
            dobaPouzivania = 0;
            frekvencia = 0;
            ram = 0;
            internaPamat = 0;
            vydrzBateria = 0;
            uhlopriecka = 0;  
            rozlisenieFotaku = 0;
            if (!this.T00.getText().isEmpty()) {
                znacka = this.T00.getText();
            } else {
                JOptionPane.showMessageDialog(null, "Nevyhovujúca značka");
                vytvor++;       
            }
            try {
                dobaPouzivania = Integer.parseInt(this.T10.getText());
                if(dobaPouzivania < 0) {
                    dobaPouzivania = Integer.parseInt("zle");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Zle zadaná doba používania");
                vytvor++;    
            }
            try {
                vykon = Integer.parseInt(this.T20.getText());
                if(vykon < 0) {
                    vykon = Integer.parseInt("zle");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Zle zadaný príkon");
                vytvor++;    
            }
            try {
                rokVyroby = Integer.parseInt(this.T30.getText());
                if(rokVyroby < 0) {
                    rokVyroby = Integer.parseInt("zle");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Zle zadaný rok výroby");
                vytvor++;    
            }
            try {
                obsahMotora = Double.parseDouble(this.T40.getText());
                if(obsahMotora < 0) {
                    obsahMotora = Double.parseDouble("zle");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Zle zadaný objem motora");
                vytvor++;    
            }
        } else if (druhCB.getSelectedIndex() == 2) {
            znacka = "";
            model = "";
            karoseria = "";
            farba = "";
            palivo = "";
            vykon = 0;
            najazdeneKm = 0;
            rokVyroby = 0;
            obsahMotora = 0;
            emisnaTrieda = "";
            nosnost = 0;
            pocetMiest = 0;
            dobaPouzivania = 0;
            frekvencia = 0;
            ram = 0;
            internaPamat = 0;
            vydrzBateria = 0;
            uhlopriecka = 0;  
            rozlisenieFotaku = 0;
            if (!this.T00.getText().isEmpty()) {
                znacka = this.T00.getText();
            } else {
                JOptionPane.showMessageDialog(null, "Nevyhovujúca značka");
                vytvor++;       
            }
            try {
                rokVyroby = Integer.parseInt(this.T10.getText());
                if(rokVyroby < 0) {
                    rokVyroby = Integer.parseInt("zle");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Zle zadaný rok výroby");
                vytvor++;    
            }
            try {
                dobaPouzivania = Integer.parseInt(this.T20.getText());
                if(dobaPouzivania < 0) {
                    dobaPouzivania = Integer.parseInt("zle");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Zle zadaná doba používania");
                vytvor++;    
            } 
            if (volbaCB.getSelectedIndex() == 0 || volbaCB.getSelectedIndex() == 1) {
                try {
                    frekvencia = Integer.parseInt(this.T30.getText());
                    if(frekvencia < 0) {
                     frekvencia = Integer.parseInt("zle");
                    }   
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Zle zadaná frekvencia procesora");
                    vytvor++;    
                }
                try {
                    ram = Double.parseDouble(this.T40.getText());
                    if(ram < 0) {
                     ram = Double.parseDouble("zle");
                    }   
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Zle zadaná ram");
                    vytvor++;    
                }
                try {
                    internaPamat = Double.parseDouble(this.T50.getText());
                    if(internaPamat < 0) {
                     internaPamat = Double.parseDouble("zle");
                    }   
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Zle zadaná interná pamäť");
                    vytvor++;    
                }
                if (volbaCB.getSelectedIndex() == 0) {
                    try {
                        uhlopriecka = Integer.parseInt(this.T60.getText());
                        if(uhlopriecka < 0) {
                         uhlopriecka = Integer.parseInt("zle");
                        }   
                    } catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(null, "Zle zadaná uhlopriečka");
                        vytvor++;    
                    }
                } else if (volbaCB.getSelectedIndex() == 1) {
                    try {
                        vydrzBateria = Integer.parseInt(this.T60.getText());
                        if(vydrzBateria < 0) {
                         vydrzBateria = Integer.parseInt("zle");
                        }   
                    } catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(null, "Zle zadaná výdrž batérie");
                        vytvor++;    
                    }
                    try {
                        rozlisenieFotaku = Integer.parseInt(this.T70.getText());
                        if (rozlisenieFotaku < 0) {
                         rozlisenieFotaku = Integer.parseInt("zle");
                        }   
                    } catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(null, "Zle zadaná výdrž batérie");
                        vytvor++;    
                    }
                }
            }
        }
            if (!this.menoT.getText().isEmpty()) {
                meno = this.menoT.getText();
            } else {
                JOptionPane.showMessageDialog(null, "Zlé meno");
                vytvor++;
            }
            if (!this.priezviskoT.getText().isEmpty()) {
                priezvisko = this.priezviskoT.getText();
            } else {
                JOptionPane.showMessageDialog(null, "Zlé priezvisko");
                vytvor++;
            }
            if (!this.mestoT.getText().isEmpty()) {
                mesto = this.mestoT.getText();
            } else {
                JOptionPane.showMessageDialog(null, "Zlé mesto");
                vytvor++;
            }
            try {
                den = Integer.parseInt(this.denT.getText());
                if(den < 0 || den > 31) {
                    den = Integer.parseInt("zle");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Zle zadaný deň");
                vytvor++;    
            }
            try {
                mesiac = Integer.parseInt(this.mesiacT.getText());
                if(mesiac < 0 || mesiac > 12) {
                    mesiac = Integer.parseInt("zle");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Zle zadaný mesiac");
                vytvor++;    
            }
            try {
                rok = Integer.parseInt(this.rokT.getText());
                if(rok < 0) {
                    rok = Integer.parseInt("zle");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Zle zadaný rok");
                vytvor++;    
            }
            try {
                cena = Integer.parseInt(this.cenaT.getText());
                if(cena < 0) {
                    cena = Integer.parseInt("zle");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Zle zadaný cena");
                vytvor++;    
            }
            try {
                cislo = Long.parseLong(this.cisloT.getText());
                if(cislo < 0 ) {
                    cislo = Long.parseLong("zle");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Zle zadané číslo");
                vytvor++;    
            }
            komentar = this.komentarT.getText();
            INaPredaj pridavany = null;
            if (vytvor == 0) {
                if (volbaCB.getSelectedItem().equals("Auto")) {
                    pridavany = new Auto(new Osoba(meno,priezvisko,den,mesiac,rok,mesto,cislo),"Auto",znacka,model,vykon,rokVyroby,obsahMotora,najazdeneKm,karoseria,farba,cena,palivo,komentar);
                } else if (volbaCB.getSelectedItem().equals("Motorka")) {
                    pridavany = new Motorka(new Osoba(meno,priezvisko,den,mesiac,rok,mesto,cislo),"Motorka",znacka,model,vykon,rokVyroby,obsahMotora,najazdeneKm,karoseria,farba,cena,palivo,komentar);
                } else if (volbaCB.getSelectedItem().equals("Autobus")) {
                    pridavany = new Autobus(new Osoba(meno,priezvisko,den,mesiac,rok,mesto,cislo),"Autobus",znacka,model,vykon,rokVyroby,obsahMotora,najazdeneKm,karoseria,farba,cena,palivo ,pocetMiest ,emisnaTrieda,komentar);
                } else if (volbaCB.getSelectedItem().equals("Kamion")) {
                    pridavany = new Kamion(new Osoba(meno,priezvisko,den,mesiac,rok,mesto,cislo),"Kamion",znacka,model,vykon,rokVyroby,obsahMotora,najazdeneKm,karoseria,farba,cena, palivo, nosnost, emisnaTrieda,komentar);
                } else if (volbaCB.getSelectedItem().equals("Kosačka")) {
                    pridavany = new Kosacka(new Osoba(meno,priezvisko,den,mesiac,rok,mesto,cislo),"Kosacka",vykon,obsahMotora,znacka,rokVyroby,dobaPouzivania,cena,komentar);
                } else if (volbaCB.getSelectedItem().equals("Krovinorez")) {
                    pridavany = new Krovinorez(new Osoba(meno,priezvisko,den,mesiac,rok,mesto,cislo),"Krovinorez",vykon,obsahMotora,znacka,rokVyroby,dobaPouzivania,cena,komentar);
                } else if (volbaCB.getSelectedItem().equals("Motorová píla")) {
                    pridavany = new MotorovaPila(new Osoba(meno,priezvisko,den,mesiac,rok,mesto,cislo),"MotorovaPila",vykon,obsahMotora,znacka,rokVyroby,dobaPouzivania,cena,komentar);
                } else if (volbaCB.getSelectedItem().equals("Počítač")) {
                    pridavany = new Pocitac(new Osoba(meno,priezvisko,den,mesiac,rok,mesto,cislo),"Pocitac",znacka,rokVyroby,dobaPouzivania,cena,frekvencia,ram,internaPamat,uhlopriecka,komentar);
                } else if (volbaCB.getSelectedItem().equals("Mobil")) {
                    pridavany = new Mobil(new Osoba(meno,priezvisko,den,mesiac,rok,mesto,cislo),"Mobil",znacka,rokVyroby,dobaPouzivania,cena,frekvencia,ram,internaPamat,vydrzBateria,rozlisenieFotaku,komentar);
                } else if (volbaCB.getSelectedItem().equals("Iné")) {
                    pridavany = new Elektronika(new Osoba(meno,priezvisko,den,mesiac,rok,mesto,cislo),"Elektronika",znacka,rokVyroby,dobaPouzivania,cena,komentar);
                } 
                int reply = JOptionPane.showConfirmDialog(null, pridavany.toString(), "Naozaj chcete pridať inzerát?", JOptionPane.YES_NO_OPTION);
                if (reply == JOptionPane.YES_OPTION) {
                    this.inz.pridajInzerat(pridavany);
                    try {
                        this.inz.zapisDatabazu();
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(null, "Pri pridávaní nastala chyba, skúste to znova");
                        this.inz.odoberInzerat(this.inz.dajPocet() - 1);
                    }
                }
            }
    }//GEN-LAST:event_pridajBActionPerformed

    private void T00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_T00ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_T00ActionPerformed

    private void T01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_T01ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_T01ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PredajGrafika.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PredajGrafika.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PredajGrafika.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PredajGrafika.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PredajGrafika(new Inzerat()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel L00;
    private javax.swing.JLabel L01;
    private javax.swing.JLabel L10;
    private javax.swing.JLabel L11;
    private javax.swing.JLabel L20;
    private javax.swing.JLabel L30;
    private javax.swing.JLabel L40;
    private javax.swing.JLabel L50;
    private javax.swing.JLabel L60;
    private javax.swing.JLabel L70;
    private javax.swing.JLabel L80;
    private javax.swing.JTextField T00;
    private javax.swing.JTextField T01;
    private javax.swing.JTextField T10;
    private javax.swing.JTextField T11;
    private javax.swing.JTextField T20;
    private javax.swing.JTextField T30;
    private javax.swing.JTextField T40;
    private javax.swing.JTextField T50;
    private javax.swing.JTextField T60;
    private javax.swing.JTextField T70;
    private javax.swing.JTextField T80;
    private javax.swing.JTextField cenaT;
    private javax.swing.JTextField cisloT;
    private javax.swing.JTextField denT;
    private javax.swing.JComboBox<String> druhCB;
    private javax.swing.JLabel druhL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JTextField komentarT;
    private javax.swing.JTextField menoT;
    private javax.swing.JTextField mesiacT;
    private javax.swing.JTextField mestoT;
    private javax.swing.JButton pridajB;
    private javax.swing.JTextField priezviskoT;
    private javax.swing.JTextField rokT;
    private javax.swing.JComboBox<String> volbaCB;
    private javax.swing.JLabel volbaL;
    // End of variables declaration//GEN-END:variables
}
